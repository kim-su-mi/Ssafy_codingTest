package aps2;

import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import java.util.Scanner;
/**
 * 현재 높이를 들고 다닐 때
 */
public class Swea_1949_2 {
	static int N,K,maxH,ans; //N*N , K:최대 공사 가능 깊이, maxH:최대 높은 봉우리
	static int[][] mountain;
	static boolean[][] visited;
	
	// 4방탐색
	static int[] dr = {-1,1,0,0};
	static int[] dc = {0,0,-1,1};
	
	public static void main(String[] args) {
		
		Scanner sc = new Scanner(System.in);
		int T = sc.nextInt();
		
		for (int tc = 1; tc <= T; tc++) {
			N = sc.nextInt();
			K = sc.nextInt();
			maxH = 0; //최대 봉우리의 높이가 1~20까지 라서 0을 초기화
			
			ans = 0; //등산로 길이
			
			mountain = new int[N][N];
			visited = new boolean[N][N];
			
			//입력 & 최대 봉우리 찾기
			for (int i = 0; i < N; i++) {
				for (int j = 0; j < N; j++) {
					mountain[i][j] = sc.nextInt();
					if(mountain[i][j] > maxH) {
						maxH = mountain[i][j];
					}
				}
			}
			for (int i = 0; i < N; i++) {
				for (int j = 0; j < N; j++) {
					mountain[i][j] = sc.nextInt();
					if(mountain[i][j] == maxH) {
						// 공사 시작 
						work(i,j,0,false,maxH); //현재 좌표 값, 내가 dist(경로 길이), 공사할 수 있나?,현재 높이 
					}
				}
			}
			
			System.out.println("#"+tc+" "+ans);
			
		}
	}
//	r,c : 현재 좌표값, dist : 등산로 길이, flag:공사했는지 여부, h:현재 높이
	private static void work(int r, int c, int dist, boolean flag,int h) {
		if(dist>ans) ans=dist; //갱신
		visited[r][c] = true; //경로에 포함
		
		//4방향 탐색
		for (int i = 0; i < 4; i++) {
			int nr = r+dr[i];
			int nc = c+dc[i];
			
			//범위를 벗어났느지 체크 + 방문햇니?체크 => 순서 중요!!!!visited[nr][nc]먼저 쓰면 ArrayIndexOutOfBoundsException바랭
			if(nr <0 || nr>=N ||nc<0||nc>=N || visited[nr][nc]) continue;
			
			//1. 다음 좌표가 내 현재 높이보가 작다면
			if(mountain[r][c] > mountain[nr][nc]) {
				work(nr,nc,dist+1,flag,mountain[nr][nc]);
			//2. 다음 좌표가 현재 내 높이와 같거나 크다면
				// 2-1. 공사를 진행한 경우
				// 2-2. 공사를 진행하지 않은 경우
			}else if(!flag && h > mountain[nr][nc]-K) {
				work(nr,nc,dist+1,true,h-1); //원본 건들이지 않아서 원복 필요없음, 일회성으로 깎음 
			}
		}
		visited[r][c] = false; //걍로에서 뺌
		
	}

}
