package swea_asignment;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.StringTokenizer;

public class Swea_14510 {
	public static void main(String[] args) throws NumberFormatException, IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		
		int T = Integer.parseInt(br.readLine());
		
		for (int tc = 0; tc< T; tc++) {
			int N = Integer.parseInt(br.readLine()); //나무의 개수
			int[] tree = new int[N];
	
			int maxHeight = Integer.MIN_VALUE;
			int result = 0;
			int oneDay = 0;
			int twoDay = 0;
			// 배열에 나무 담고 최대 높이 구함 
			StringTokenizer st = new StringTokenizer(br.readLine());
			for (int i = 0; i < N; i++) {
				tree[i] = Integer.parseInt(st.nextToken());
				maxHeight = Math.max(maxHeight, tree[i]);
			}
			
			//자라야하는 크기 저장
			for (int i = 0; i < tree.length; i++) {
				int diff = maxHeight-tree[i];
				result += (diff / 3) * 2; // 3의 배수는 2일 필요
                if (diff % 3 == 1) oneDay++;
                else if (diff % 3 == 2) twoDay++;
				
			}
			
			// 하루씩 자라야하는 날이 더 많으면 이건 대체 불가
			// 최적화된 oneDay와 twoDay 처리
            int minDay = Math.min(oneDay, twoDay);
            result += minDay * 2;
            oneDay -= minDay;
            twoDay -= minDay;

            if (twoDay > 0) { // 남은 twoDay 처리
                result += (twoDay / 3) * 4;
                if (twoDay % 3 == 1) result += 2;
                else if (twoDay % 3 == 2) result += 3;
            } else { // 남은 oneDay 처리
                result += oneDay * 2;
            }
			System.out.println("#"+tc+" "+result);
			
			
			
			
			
			
		}//end tc
		
	}

}
