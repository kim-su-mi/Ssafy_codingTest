package swea_asignment;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.LinkedList;
import java.util.Queue;
import java.util.StringTokenizer;

public class swea_7733 {
	static int[] dr = {-1,1,0,0};
	static int[] dc = {0,0,-1,1};
	private static boolean[][] visited;
	public static void main(String[] args) throws NumberFormatException, IOException {
		
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		int T = Integer.parseInt(br.readLine());
		
		for(int testCase=1; testCase<=T; testCase++) {
			int N = Integer.parseInt(br.readLine()); //치즈 덩어리의 한변의 길이 
			int[][] cheese = new int[N][N]; 
			
			StringTokenizer st;
			
			// 치즈 입력 받음
			for (int i = 0; i < cheese.length; i++) {
				st = new StringTokenizer(br.readLine());
				for (int j = 0; j < cheese.length; j++) {
					cheese[i][j] = Integer.parseInt(st.nextToken());
				}
			}
			
			// 100번 완탐
			// 1일째의 덩어리수 ,,,, 100일째의 덩어리수 구함 
			int max = -1;
			for (int k = 1; k <= 100; k++) {
				
				visited = new boolean[N][N];
				// 치즈 돌면서 k일째이하의 치즈 덩어리의 값을 0으로 바꿈
				for (int i = 0; i < cheese.length; i++) {
					for (int j = 0; j < cheese.length; j++) {
						if( cheese[i][j] <= k) {
							cheese[i][j] = 0;
							visited[i][j] = true;
						}
					}
				}
				
				bfs(0,0);
				
				
				
			}
			
			
			StringBuilder sb = new StringBuilder();
			System.out.println(sb.append("#").append(testCase).append(" ").append(" "));
			
			
		}
		
		
		
	}
	private static void bfs(int r, int c) {
		
		for (int i = 0; i < visited.length; i++) {
			for (int j = 0; j < dc.length; j++) {
				if(visited[i][j]) continue;
				
			}
		}
		
		
	}

}
