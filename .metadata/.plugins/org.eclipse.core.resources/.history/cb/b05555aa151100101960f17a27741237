package swea_asignment;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Arrays;
import java.util.StringTokenizer;

public class Swea_2382 {
	static int[][] micro;
	public static void main(String[] args) throws NumberFormatException, IOException {
		
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		int T = Integer.parseInt(br.readLine());
		StringBuilder sb = new StringBuilder();
		
		int[] dr = {0,-1,1,0,0}; //상(1)하(2)좌(3)우(4) , 입력에서 1부터 들어오므로 0은 버림
		int[] dc = {0,0,0,-1,1};
		
		for(int testCase=1; testCase<=T; testCase++) {
			StringTokenizer st = new StringTokenizer(br.readLine());
			int N = Integer.parseInt(st.nextToken()); //map의 크기 , N*N
			int M = Integer.parseInt(st.nextToken()); //격리 시간 
			int K = Integer.parseInt(st.nextToken()); //군집 정보 수

			
			micro = new int[K][4]; //미생물의 군집 정보 // 0: 행 위치, 1: 열위치, 2: 미생물 수 , 3:이동 방향 
//			int[][] map = new int[N][N]; //군집의 행 idx를 저장 
//			Arrays.fill(map, -1); //겉에 빨간 부분 -1이라고 생각 
			
			
			for (int i = 0; i < K; i++) {
				st = new StringTokenizer(br.readLine());
				for (int j = 0; j < 4; j++) {
					micro[i][j] = Integer.parseInt(st.nextToken());
				}
				
			}
//			for(int[] a : micro) {
//				System.out.println(Arrays.toString(a));
//			}
			
			for (int i = 0; i < M; i++) { 
				round();
			}
			
			
			sb.append("#").append(testCase).append(" ").append(" ").append("\n");
			
			
		}
		System.out.println(sb.toString());
		
		
		
	}
	private static void round() {
		for (int i = 1; i < micro.length-1; i++) {
//			for (int j = 1; j < micro.length-1; j++) {
				if(micro[i][2] <=0) continue;
				else if(micro[i][0] == 0 || micro[i][1] == 0) {
					micro[i][2] = micro[i][2]/2; // 군집 수 절반으로 줄임 
					micro[i][3] = micro[i][3]<3 ? (micro[i][3]+2)%5 : (micro[i][3]+3)%5; // 방향 전환
				}
//			}
		}
		
	}

}
