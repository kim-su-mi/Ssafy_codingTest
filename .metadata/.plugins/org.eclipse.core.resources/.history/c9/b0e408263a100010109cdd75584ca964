package swea_asignment;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Arrays;
import java.util.StringTokenizer;
/**
 * 동적 계획법
 * 거스름돈이 1원일떄~~~~주어진 값일때까지의 필요한 동전의 수를 셈 
 */
public class Swea_1970_2 {
	public static void main(String[] args) throws NumberFormatException, IOException {
		
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		int T = Integer.parseInt(br.readLine());
		StringBuilder sb = new StringBuilder();
		
		for(int testCase=1; testCase<=T; testCase++) {
			int[] changes = {50000, 10000, 5000, 1000, 500, 100, 50, 10};
			

			int[] dp = new int[change+1];
			
			int change = Integer.parseInt(br.readLine()); //거스름돈 
			
			for (int i = 1; i <= change; i++) {
				int minCnt= 987654321;
				
				//10원 고려 
				if(i>=10) {
					
					minCnt = Math.min(minCnt, dp[i-10]+1);
				}
				dp[i] = minCnt;
			}
			System.out.println(Arrays.toString(dp));
			
			
//			sb.append("#").append(testCase).append("\n");
//			
//			sb.append("\n");
			
		}
		
		System.out.println(sb.toString());
	}

}
