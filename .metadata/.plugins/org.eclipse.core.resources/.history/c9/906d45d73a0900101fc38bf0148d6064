package swea_asignment;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.StringTokenizer;

public class Swea_14510 {
	public static void main(String[] args) throws NumberFormatException, IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		
		int T = Integer.parseInt(br.readLine());
		
		for (int tc = 1; tc<= T; tc++) {
			int N = Integer.parseInt(br.readLine()); //나무의 개수
			int[] tree = new int[N];
	
			int maxHeight = Integer.MIN_VALUE;
			int result = 0;
			int oneDay = 0;
			int twoDay = 0;
			// 배열에 나무 담고 최대 높이 구함 
			StringTokenizer st = new StringTokenizer(br.readLine());
			for (int i = 0; i < N; i++) {
				tree[i] = Integer.parseInt(st.nextToken());
				maxHeight = Math.max(maxHeight, tree[i]);
			}
			
			// 성장해야 하는 크기 분석
            int oneDay = 0;
            int twoDay = 0;
            
            for (int i = 0; i < N; i++) {
                int diff = maxHeight - tree[i];
                oneDay += diff % 2;
                twoDay += diff / 2;
            }
            
            int days = 0;
            while (oneDay > 0 || twoDay > 0) {
                days++;
                
                if (days % 2 == 1) { // 홀수날 (1씩 자람)
                    if (oneDay > 0) {
                        oneDay--;
                    } else if (twoDay > 0) {
                        twoDay--;
                        oneDay++; // 2 사용했지만 1만 필요했으므로 1이 남음
                    }
                } else { // 짝수날 (2씩 자람)
                    if (twoDay > 0) {
                        twoDay--;
                    } else if (oneDay >= 2) {
                        oneDay -= 2; // 1이 두 개 필요한데 2를 사용
                    } else if (oneDay == 1) {
                        // 1이 하나 필요한데 2를 사용하고 다음날 처리할 것 없음 -> 그냥 스킵
                        oneDay--;
                        days++; // 다음날(홀수날)에 1을 사용하기 위해 하루 더 기다림
                    }
                }
            }
            
            System.out.println("#"+tc+" "+days);
			
			
			
			
			
			
		}//end tc
		
	}

}
