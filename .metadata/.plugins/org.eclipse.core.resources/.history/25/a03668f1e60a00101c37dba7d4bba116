import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import java.util.StringTokenizer;

public class bj_1197 {
	static class Edge implements Comparable<Edge>{
		int a;
		int b;
		int cost;
		public Edge(int a, int b, int cost) {
			super();
			this.a = a;
			this.b = b;
			this.cost = cost;
		}
		@Override
		public String toString() {
			return "Edge [a=" + a + ", b=" + b + ", cost=" + cost + "]";
		}
		@Override
		public int compareTo(bj_1197.Edge o) {
			return this.cost - o.cost;
		}
		
	}
	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		
		StringTokenizer st = new StringTokenizer(br.readLine());
		
		
		int V = Integer.parseInt(st.nextToken()); //정점
		int E = Integer.parseInt(st.nextToken()); // 간선
		
		List<Edge> list = new ArrayList<>();
		
		for (int i = 0; i < E; i++) {
			st = new StringTokenizer(br.readLine());
			list.add(new Edge(Integer.parseInt(st.nextToken()),Integer.parseInt(st.nextToken()),Integer.parseInt(st.nextToken())));

		}
		Collections.sort(list);
		
		int[] p = new int[V+1];
		
		for (int i = 1; i <= V; i++) {
			p[i] = i;
		}
		
		int result = 0;
		int pick = 0;
		
		
	}

}
