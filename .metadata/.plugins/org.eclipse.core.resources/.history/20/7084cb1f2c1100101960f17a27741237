package swea_asignment;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.StringTokenizer;

public class Swea_1486 {
	public static void main(String[] args) throws NumberFormatException, IOException {
		
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		int T = Integer.parseInt(br.readLine());
		StringBuilder sb = new StringBuilder();
		
		for(int testCase=1; testCase<=T; testCase++) {
			StringTokenizer st = new StringTokenizer(br.readLine());
			int N = Integer.parseInt(st.nextToken()); //점원 수
			int B = Integer.parseInt(st.nextToken()); // 선반 높이 
			
			int[] clerk = new int[N];
			boolean[] visited = new boolean[N];
//			List<Integer> clerk = new ArrayList<>();
			
			st = new StringTokenizer(br.readLine());
			for (int i = 0; i < N; i++) {
//				clerk.add(Integer.parseInt(st.nextToken()));
				clerk[i] = Integer.parseInt(st.nextToken());
			}
//			Collections.sort(clerk);
			Arrays.sort(clerk);
			
//			Deque<Integer> d = new ArrayDeque<>();
			
		
			
			int totalHeight = 0;
			//일단 최대한 차이를 줄임
			
			
			while(totalHeight<B) {
				for (int i = clerk.length-1; i >=0; i--) {
					if(B-totalHeight < clerk[i]) continue;
					totalHeight+=clerk[i];
					visited[i] = true;
				}
			}
			//리스트를 뒤부터 탐색해서 
//			while(totalHeight<B) {
//				int size = clerk.size();
//				for (int i = size; i >=0; i--) {
//					if(B-totalHeight < clerk.remove(i)) continue;
////					total
//				}
//			}
			
			
//			System.out.println("tc : "+testCase);
//			System.out.println("남음 키 : "+ (B-totalHeight));
//			System.out.println(totalHeight);
//			System.out.println();
//			sb.append("#").append(testCase).append(" ").append(totalHeight-B).append("\n");
			
			
		}
//		System.out.println(sb.toString());
		
		
		
	}

}
